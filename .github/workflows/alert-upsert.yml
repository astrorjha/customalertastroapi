name: Rewire DAG failure alert to last committer
on: push

env:
  ORG_ID: ${{ secrets.ASTRO_ORG_ID }}
  DEPLOY_ID: ${{ secrets.ASTRO_DEPLOY_ID }}
  ASTRO_API_TOKEN: ${{ secrets.ASTRO_API_TOKEN }}

jobs:
  alert:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # capture committer e-mail
      - id: meta
        run: echo "AUTHOR_EMAIL=${{ github.event.head_commit.author.email }}" >> $GITHUB_ENV

      # upsert e-mail channel
      - name: Upsert channel
        run: |
          CID=$(curl -s -H "Authorization: Bearer $ASTRO_API_TOKEN" \
            "https://api.astronomer.io/platform/v1beta1/organizations/$ORG_ID/notificationChannels" \
            | jq -r '.notificationChannels[] | select(.definition==env.AUTHOR_EMAIL) | .id')
          if [ -z "$CID" ]; then
            CID=$(curl -s -X POST -H "Authorization: Bearer $ASTRO_API_TOKEN" \
              -H "Content-Type: application/json" \
              -d '{"name":"demo-'${AUTHOR_EMAIL}'","type":"EMAIL","definition":"'${AUTHOR_EMAIL}'"}' \
              https://api.astronomer.io/platform/v1beta1/organizations/$ORG_ID/notificationChannels \
              | jq -r '.id')
          fi
          echo "CHAN_ID=$CID" >> $GITHUB_ENV

      # upsert DAG_FAILURE alert
      - name: Upsert alert
        run: |
          curl -s -X POST -H "Authorization: Bearer $ASTRO_API_TOKEN" \
            -H "Content-Type: application/json" \
            -d '{
                  "entityId": "'${DEPLOY_ID}'",
                  "entityType": "DEPLOYMENT",
                  "name": "auto-committer-failure",
                  "type": "DAG_FAILURE",
                  "severity": "CRITICAL",
                  "notificationChannelIds": ["'${CHAN_ID}'"],
                  "rules": { "properties": { "deploymentId": "'${DEPLOY_ID}'" } }
                }' \
            https://api.astronomer.io/platform/v1beta1/organizations/$ORG_ID/alerts