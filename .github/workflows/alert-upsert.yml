# .github/workflows/alert-upsert.yml
# Custom Alert Workflow: upserts an Astro DAG_FAILURE alert targeting
# the last committer‚Äôs email via github.event.pusher.email.

name: Rewire DAG failure alert to last committer

on:
  push:
    branches: [main]
  workflow_dispatch:

env:
  ASTRO_ORG_ID:    ${{ secrets.ASTRO_ORG_ID }}        # Your Astro Org ID
  ASTRO_DEPLOY_ID: ${{ secrets.ASTRO_DEPLOY_ID }}     # Your Astro Deployment ID
  ASTRO_API_TOKEN: ${{ secrets.ASTRO_API_TOKEN }}     # Token with Platform API perms
  GH_EMAIL_TOKEN:  ${{ secrets.GH_EMAIL_TOKEN }}      # GitHub token for GraphQL if needed
  GH_TOKEN:        ${{ secrets.GITHUB_TOKEN }}         # Default GitHub Actions token

jobs:
  upsert-alert:
    name: Upsert Astro DAG_FAILURE Alert
    runs-on: ubuntu-latest

    # Inject the pusher‚Äôs public email directly from the push payload
    env:
      AUTHOR_EMAIL: ${{ github.event.pusher.email }}    # Guaranteed public email on push

    steps:
      - name: üöÄ Checkout repository
        uses: actions/checkout@v4

      - name: üîç Debug: show committer email
        run: |
          echo "üîî Will notify: $AUTHOR_EMAIL"

      - name: üîî Upsert Notification Channel
        id: upsert-channel
        run: |
          set -euxo pipefail
          all_ch=$(curl -s -H "Authorization: Bearer $ASTRO_API_TOKEN" \
            "https://api.astronomer.io/platform/v1beta1/organizations/${ASTRO_ORG_ID}/notification-channels?entityType=DEPLOYMENT&entityId=${ASTRO_DEPLOY_ID}&limit=100")
          channel_id=$(echo "$all_ch" | jq -r --arg email "$AUTHOR_EMAIL" '
            .notificationChannels[] |
            select(.definition.recipients[]? == $email) |
            .id
          ' | head -n1)
          if [[ -z "$channel_id" ]]; then
            create_resp=$(curl -s -X POST \
              -H "Authorization: Bearer $ASTRO_API_TOKEN" \
              -H "Content-Type: application/json" \
              -d "{\"name\":\"dag-failure-$AUTHOR_EMAIL\",\"type\":\"EMAIL\",\"entityType\":\"DEPLOYMENT\",\"entityId\":\"$ASTRO_DEPLOY_ID\",\"definition\":{\"recipients\":[\"$AUTHOR_EMAIL\"]}}" \
              "https://api.astronomer.io/platform/v1beta1/organizations/${ASTRO_ORG_ID}/notification-channels")
            channel_id=$(echo "$create_resp" | jq -r .id)
          fi
          echo "CHANNEL_ID=$channel_id" >> "$GITHUB_ENV"

      - name: üö® Upsert DAG_FAILURE Alert
        run: |
          set -euxo pipefail
          dag_id="fail_demo_dag"  # ‚Üê replace with your real DAG ID
          all_alerts=$(curl -s -H "Authorization: Bearer $ASTRO_API_TOKEN" \
            "https://api.astronomer.io/platform/v1beta1/organizations/${ASTRO_ORG_ID}/alerts?entityType=DEPLOYMENT&entityId=${ASTRO_DEPLOY_ID}&limit=100")
          alert_id=$(echo "$all_alerts" | jq -r '
            .alerts[] |
            select(.type=="DAG_FAILURE" and .entityId=="'"$ASTRO_DEPLOY_ID"'") |
            .id // empty
          ')
          read -r -d '' payload <<EOF
          {
            "entityType":"DEPLOYMENT",
            "entityId":"$ASTRO_DEPLOY_ID",
            "name":"auto-committer-dag-failure",
            "type":"DAG_FAILURE",
            "severity":"CRITICAL",
            "notificationChannelIds":["$CHANNEL_ID"],
            "rules":{
              "properties":{"deploymentId":"$ASTRO_DEPLOY_ID"},
              "patternMatches":[
                {"entityType":"DAG_ID","operatorType":"IS","values":["$dag_id"]}
              ]
            }
          }
          EOF
          if [[ -z "$alert_id" ]]; then
            curl -s -X POST \
              -H "Authorization: Bearer $ASTRO_API_TOKEN" \
              -H "Content-Type: application/json" \
              -d "$payload" \
              "https://api.astronomer.io/platform/v1beta1/organizations/${ASTRO_ORG_ID}/alerts" \
            | jq .
          else
            curl -s -X PATCH \
              -H "Authorization: Bearer $ASTRO_API_TOKEN" \
              -H "Content-Type: application/json" \
              -d "$payload" \
              "https://api.astronomer.io/platform/v1beta1/organizations/${ASTRO_ORG_ID}/alerts/${alert_id}" \
            | jq .
          fi